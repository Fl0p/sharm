pcm.mpd_in {
    type plug
    slave.pcm "jack_playback_loop"
    slave.format FLOAT_LE
    slave.channels 6
    slave.rate 48000
    hint {
        description "MPD Input (6ch, 48kHz FLOAT_LE)"
    }
}

pcm.jack_in {
    type plug
    slave.pcm "jack_playback_loop"
    slave.channels 6
    slave.rate 48000
    slave.format FLOAT_LE
    hint {
        description "Input Into Jack (6ch, 48kHz, FLOAT_LE)"
    }
}

pcm.jack_playback_loop {
  type jack
  playback_ports {
    0 loop1:input_1
    1 loop1:input_2
    2 loop2:input_1
    3 loop2:input_2
    4 loop3:input_1
    5 loop3:input_2
    # 0 loopback:playback_1
    # 1 loopback:playback_2
    # 2 loopback:playback_3
    # 3 loopback:playback_4
    # 4 loopback:playback_5
    # 5 loopback:playback_6
  }
}

pcm.jack_playback_system {
  type jack
  playback_ports {
    0 system:playback_1
    1 system:playback_2
    2 system:playback_3
    3 system:playback_4
    4 system:playback_5
    5 system:playback_6
  }
}

pcm.jack_capture_1 {
  type jack
  capture_ports {
    # 0 loop1:output_1
    0 loopback:capture_1
  }
}

pcm.record_from_jack_1 {
    type plug
    slave.pcm "jack_capture_1"
    hint {
        description "Recording input 1 from JACK"
    }
}

pcm.jack_capture_2 {
  type jack
  capture_ports {
    # 0 loop1:output_2
    0 loopback:capture_2
  }
}

pcm.record_from_jack_2 {
    type plug
    slave.pcm "jack_capture_2"
    hint {
        description "Recording input 2 from JACK"
    }
}

pcm.jack_capture_3 {
  type jack
  capture_ports {
    # 0 loop2:output_1
    0 loopback:capture_3
  }
}

pcm.record_from_jack_3 {
    type plug
    slave.pcm "jack_capture_3"
    hint {
        description "Recording input 3 from JACK"
    }
}

pcm.jack_capture_4 {
  type jack
  capture_ports {
    # 0 loop2:output_2
    0 loopback:capture_4
  }
}

pcm.record_from_jack_4 {
    type plug
    slave.pcm "jack_capture_4"
    hint {
        description "Recording input 4 from JACK"
    }
}

pcm.jack_capture_5 {
  type jack
  capture_ports {
    # 0 loop3:output_1
    0 loopback:capture_5
  }
}

pcm.record_from_jack_5 {
    type plug
    slave.pcm "jack_capture_5"
    hint {
        description "Recording input 5 from JACK"
    }
}

pcm.jack_capture_6 {
  type jack
  capture_ports {
    # 0 loop3:output_2
    0 loopback:capture_6
  }
}

pcm.record_from_jack_6 {
    type plug
    slave.pcm "jack_capture_6"
    hint {
        description "Recording input 6 from JACK"
    }
}

pcm.splitter {
    type multi
    slaves {
        a { pcm "null_2ch" channels 2 }
        b { pcm "null_2ch" channels 2 }
        c { pcm "null_2ch" channels 2 }
    }
    bindings {
        0 { slave a channel 0 }
        1 { slave a channel 1 }
        2 { slave b channel 0 }
        3 { slave b channel 1 }
        4 { slave c channel 0 }
        5 { slave c channel 1 }
    }
}

pcm.six2lr {
    type route
    slave {
        pcm       "jack_in"
        channels  6
    }
    ttable.0.0  1.0   # FL → FL
    ttable.1.1  1.0   # FR → FR
    ttable.2.2  0.0   # BL → BL
    ttable.3.3  0.0   # BR → BR
    ttable.4.4  0.0   # C → C
    ttable.5.5  0.0   # LFE → LFE
}

pcm.six2six {
    type route
    slave {
        pcm       "jack_in"
        channels  6
    }
    ttable.0.0  1.0   # FL → FL
    ttable.1.1  1.0   # FR → FR
    ttable.2.2  1.0   # BL → BL
    ttable.3.3  1.0   # BR → BR
    ttable.4.4  1.0   # C → C
    ttable.5.5  1.0   # LFE → LFE
}

pcm.null_any {
  type plug
  slave {
    pcm "null"
  }
}

pcm.null_6ch {
    type plug
    slave {
        pcm "null"
        channels 6
    }
}

pcm.null_2ch {
    type plug
    slave {
        pcm "null"
        channels 2
    }
}

pcm.output_to_file {
    type file
    file "/var/lib/mpd/music/mpd_audio_capture.wav"
    format "wav"
    slave.pcm "null_any"
}

pcm.output_6ch {
    type file
    file "/var/lib/mpd/music/mpd_audio_capture_6ch.wav"
    format "wav"
    slave.pcm "null_6ch"
}

pcm.output_front {
    type file
    file "/var/lib/mpd/music/mpd_audio_capture_front.wav"
    format "wav"
    slave.pcm "null_2ch"
}

pcm.output_center {
    type file
    file "/var/lib/mpd/music/mpd_audio_capture_center.wav"
    format "wav"
    slave.pcm "null_2ch"
}

pcm.output_rear {
    type file
    file "/var/lib/mpd/music/mpd_audio_capture_rear.wav"
    format "wav"
    slave.pcm "null_2ch"
}

